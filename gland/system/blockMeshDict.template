/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

$$ muscle_radius = mr
convertToMeters 1;

vertices
(
    (-$muscle_radius$ 0  -$muscle_radius$)
    ( $muscle_radius$ 0  -$muscle_radius$)
    ( $muscle_radius$  $muscle_radius$  -$muscle_radius$)
    (-$muscle_radius$  $muscle_radius$  -$muscle_radius$)
    (-$muscle_radius$ 0   $muscle_radius$)
    ( $muscle_radius$ 0   $muscle_radius$)
    ( $muscle_radius$  $muscle_radius$   $muscle_radius$)
    (-$muscle_radius$  $muscle_radius$   $muscle_radius$)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (50 30 50) 
    simpleGrading
    (
     (
         (0.2 0.3 1)            
	 (0.6 0.4 1)
	 (0.2 0.3 1)
      )                           
      (
         (0.2 0.3 1)             // 20% y-dir, 30% cells, expansion =1
	 (0.6 0.4 1)
	 (0.2 0.3 1)
      )
     (
         (0.2 0.3 1)             
	 (0.6 0.4 1)
	 (0.2 0.3 1)
      )			
    )
);

edges
(
);

boundary
(
    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    thoraic_wall_muscle
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }
    back
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }
    front
    {
        type wall;
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
